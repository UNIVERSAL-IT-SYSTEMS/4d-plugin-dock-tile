/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Dock Tile
 #	author : miyako
 #	2014/12/01
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
// --- Dock

		case 1 :
			DOCK_Get_badge(pResult, pParams);
			break;

		case 2 :
			DOCK_SET_BADGE(pResult, pParams);
			break;

		case 3 :
			DOCK_CANCEL_BOUNCE(pResult, pParams);
			break;

		case 4 :
			DOCK_Bounce(pResult, pParams);
			break;

		case 5 :
			DOCK_SET_ICON(pResult, pParams);
			break;

		case 6 :
			DOCK_Get_icon(pResult, pParams);
			break;

// --- Size

		case 7 :
			DOCK_GET_SIZE(pResult, pParams);
			break;

		case 8 :
			DOCK_GET_SCREEN_FRAME(pResult, pParams);
			break;

	}
}

// ------------------------------------- Dock -------------------------------------


void DOCK_Get_badge(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_TEXT returnValue;
 
    NSDockTile *dockTile = [[NSApplication sharedApplication]dockTile];
    
	returnValue.setUTF16String([dockTile badgeLabel]);
	returnValue.setReturn(pResult);
}

void DOCK_SET_BADGE(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_TEXT Param1;

	Param1.fromParamAtIndex(pParams, 1);

    NSDockTile *dockTile = [[NSApplication sharedApplication]dockTile];
    
    if(Param1.getUTF16Length())
    {
        NSString *badgeLabel = Param1.copyUTF16String();
        [dockTile setBadgeLabel:badgeLabel];
        [badgeLabel release];    
    }else{
        [dockTile setBadgeLabel:nil];
    }
}

void DOCK_CANCEL_BOUNCE(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_LONGINT Param1;

	Param1.fromParamAtIndex(pParams, 1);

	[[NSApplication sharedApplication]cancelUserAttentionRequest:Param1.getIntValue()];
}

void DOCK_Bounce(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_LONGINT Param1;
	C_LONGINT returnValue;

	Param1.fromParamAtIndex(pParams, 1);
  
    returnValue.setIntValue([[NSApplication sharedApplication]requestUserAttention:Param1.getIntValue()]);
    returnValue.setReturn(pResult);
}

void DOCK_SET_ICON(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_PICTURE Param1;

	Param1.fromParamAtIndex(pParams, 1);

    NSImage *iconImage =Param1.copyImage();
    
    if(iconImage){
        [[NSApplication sharedApplication]setApplicationIconImage:iconImage];
        [iconImage release];
    }
}

void DOCK_Get_icon(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_PICTURE returnValue;

    NSData *data = [[[NSApplication sharedApplication]applicationIconImage] TIFFRepresentation];
    
    returnValue.setBytes((const uint8_t*)[data bytes], [data length]);
	returnValue.setReturn(pResult);
}

// ------------------------------------- Size -------------------------------------


void DOCK_GET_SIZE(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_REAL Param1;
	C_REAL Param2;

    NSDockTile *dockTile = [[NSApplication sharedApplication]dockTile];

    NSSize size = [dockTile size];
    
    Param1.setDoubleValue(size.width);
    Param1.setDoubleValue(size.height);

	Param1.toParamAtIndex(pParams, 1);
	Param2.toParamAtIndex(pParams, 2);
}

void DOCK_GET_SCREEN_FRAME(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_REAL Param1;
	C_REAL Param2;
	C_REAL Param3;
	C_REAL Param4;

    NSScreen *mainScreen = [NSScreen mainScreen];

    NSRect rect = [mainScreen visibleFrame];
    
    Param1.setDoubleValue(rect.origin.x);
    Param2.setDoubleValue(rect.origin.y);
    Param3.setDoubleValue(rect.size.width);
    Param4.setDoubleValue(rect.size.height);
    
	Param1.toParamAtIndex(pParams, 1);
	Param2.toParamAtIndex(pParams, 2);
	Param3.toParamAtIndex(pParams, 3);
	Param4.toParamAtIndex(pParams, 4);
}

